name: Test
on:
  push:
    branches: [development]
  pull_request:
    branches: [development]
jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Install modules
        run: yarn install
      - name: Run tests
        run: yarn cross-env NODE_OPTIONS='--experimental-vm-modules' jest tests --coverage --config jest.config.json
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@004814556e37c54a2f6e31384c9e18e983317366
        with:
          deno-version: v1.x
      - name: Verify formatting
        run: deno fmt server/ --check
      - name: Run linter
        run: deno lint server/
      - name: Run tests
        run: deno test server/ -A --unstable --coverage=.cov_profile
      - name: Generate coverage report
        run: deno coverage .cov_profile --lcov --exclude=tests/ > .cov_profile/cov_profile.lcov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: .cov_profile/
          files: cov_profile.lcov
          flags: unittests
          name: pear.dev-codecov
          verbose: true
          fail_ci_if_error: true
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
